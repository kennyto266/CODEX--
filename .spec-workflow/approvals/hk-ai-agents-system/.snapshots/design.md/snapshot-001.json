{
  "id": "snapshot_1759044531763_3a6oa7e9h",
  "approvalId": "approval_1759044531746_2ao0c2edc",
  "approvalTitle": "港股AI代理系统设计文档",
  "version": 1,
  "timestamp": "2025-09-28T07:28:51.763Z",
  "trigger": "initial",
  "status": "pending",
  "content": "# 港股AI代理系统设计文档\r\n\r\n## 系统架构\r\n\r\n### 整体架构\r\n基于 `hk_complete_system.py` 重构，实现股票数据获取 → 7个AI代理分析 → Dashboard输出的完整工作流。\r\n\r\n```\r\n┌─────────────────┐    ┌─────────────────┐    ┌─────────────────┐\r\n│   数据获取模块    │───▶│   AI代理模块     │───▶│  Dashboard模块   │\r\n│                │    │                │    │                │\r\n│ • 股票API调用   │    │ • 7个专业代理   │    │ • Web服务器     │\r\n│ • 数据格式化    │    │ • Cursor API    │    │ • 实时展示      │\r\n│ • 缓存机制      │    │ • 并行处理      │    │ • 响应式设计    │\r\n└─────────────────┘    └─────────────────┘    └─────────────────┘\r\n```\r\n\r\n### 核心模块\r\n\r\n#### 1. 数据获取模块 (Data Module)\r\n**职责**: 获取和预处理股票数据\r\n- **输入**: 股票代码 (如 0700.HK)\r\n- **输出**: 标准化的OHLCV数据\r\n- **技术栈**: aiohttp, asyncio\r\n- **API**: 现有股票数据API\r\n\r\n#### 2. AI代理模块 (Agents Module)\r\n**职责**: 7个专业代理协作分析\r\n- **代理类型**:\r\n  - 基本面分析代理 (Fundamental Analyst)\r\n  - 技术分析代理 (Technical Analyst)\r\n  - 情绪分析代理 (Sentiment Analyst)\r\n  - 新闻分析代理 (News Analyst)\r\n  - 研究辩论代理 (Research Debate)\r\n  - 交易代理 (Trader)\r\n  - 风险管理代理 (Risk Manager)\r\n- **技术栈**: Cursor API, asyncio\r\n- **输出**: 结构化分析结果\r\n\r\n#### 3. Dashboard模块 (Dashboard Module)\r\n**职责**: 实时展示分析结果\r\n- **功能**: Web界面, 实时更新, 响应式设计\r\n- **技术栈**: HTTP服务器, HTML/CSS/JS\r\n- **端口**: 8080\r\n\r\n## 技术设计\r\n\r\n### 数据流设计\r\n```\r\n股票API → 数据获取模块 → 数据格式化 → AI代理模块 → 分析结果 → Dashboard模块 → 用户界面\r\n```\r\n\r\n### 代理协作模式\r\n- **并行处理**: 7个代理同时启动，独立分析\r\n- **异步通信**: 使用asyncio实现非阻塞操作\r\n- **状态管理**: 实时跟踪每个代理的运行状态\r\n- **结果聚合**: 收集所有代理的分析结果\r\n\r\n### API集成设计\r\n- **Cursor API**: 使用v0端点进行AI代理调用\r\n- **认证方式**: Bearer Token\r\n- **错误处理**: 重试机制和降级策略\r\n- **限流控制**: 避免API调用过于频繁\r\n\r\n## 文件结构设计\r\n\r\n```\r\nhk-ai-agents-system/\r\n├── main.py                    # 主入口文件\r\n├── config/\r\n│   ├── settings.py           # 配置管理\r\n│   └── api_keys.py          # API密钥管理\r\n├── src/\r\n│   ├── data/\r\n│   │   ├── stock_data.py     # 股票数据获取\r\n│   │   └── data_formatter.py # 数据格式化\r\n│   ├── agents/\r\n│   │   ├── base_agent.py     # 代理基类\r\n│   │   ├── fundamental.py    # 基本面分析代理\r\n│   │   ├── technical.py      # 技术分析代理\r\n│   │   ├── sentiment.py      # 情绪分析代理\r\n│   │   ├── news.py          # 新闻分析代理\r\n│   │   ├── research.py       # 研究辩论代理\r\n│   │   ├── trader.py         # 交易代理\r\n│   │   └── risk_manager.py   # 风险管理代理\r\n│   ├── dashboard/\r\n│   │   ├── web_server.py     # Web服务器\r\n│   │   ├── html_generator.py # HTML生成\r\n│   │   └── static/          # 静态资源\r\n│   └── utils/\r\n│       ├── logger.py         # 日志管理\r\n│       └── helpers.py        # 辅助函数\r\n├── tests/\r\n│   ├── test_data.py         # 数据模块测试\r\n│   ├── test_agents.py       # 代理模块测试\r\n│   └── test_dashboard.py    # Dashboard测试\r\n└── requirements.txt         # 依赖管理\r\n```\r\n\r\n## 数据库设计\r\n\r\n### 无数据库设计\r\n- **内存存储**: 使用Python字典存储临时数据\r\n- **文件缓存**: 可选的文件缓存机制\r\n- **状态管理**: 运行时状态存储在内存中\r\n\r\n## 安全设计\r\n\r\n### API安全\r\n- **密钥管理**: 环境变量存储API密钥\r\n- **访问控制**: 本地访问限制\r\n- **数据加密**: HTTPS传输\r\n\r\n### 系统安全\r\n- **输入验证**: 股票代码格式验证\r\n- **错误处理**: 异常捕获和日志记录\r\n- **资源限制**: 内存和CPU使用限制\r\n\r\n## 性能设计\r\n\r\n### 并发处理\r\n- **异步IO**: 使用asyncio实现非阻塞操作\r\n- **并行代理**: 7个代理同时运行\r\n- **连接池**: HTTP连接复用\r\n\r\n### 缓存策略\r\n- **数据缓存**: 股票数据短期缓存\r\n- **结果缓存**: 代理分析结果缓存\r\n- **页面缓存**: Dashboard页面缓存\r\n\r\n### 监控设计\r\n- **性能指标**: 响应时间、吞吐量\r\n- **错误监控**: 异常统计和告警\r\n- **资源监控**: CPU、内存使用情况\r\n\r\n## 部署设计\r\n\r\n### 环境要求\r\n- **Python版本**: 3.10+\r\n- **操作系统**: Windows 10/11\r\n- **依赖管理**: pip + requirements.txt\r\n- **端口配置**: 8080 (Dashboard)\r\n\r\n### 启动流程\r\n1. 检查Python环境和依赖\r\n2. 加载配置和API密钥\r\n3. 启动数据获取模块\r\n4. 启动AI代理模块\r\n5. 启动Dashboard模块\r\n6. 打开浏览器访问界面\r\n\r\n### 配置管理\r\n- **环境变量**: API密钥和配置\r\n- **配置文件**: JSON格式配置\r\n- **默认值**: 合理的默认配置\r\n\r\n## 扩展设计\r\n\r\n### 水平扩展\r\n- **多股票支持**: 支持同时分析多只股票\r\n- **代理扩展**: 支持添加新的代理类型\r\n- **API扩展**: 支持更多数据源\r\n\r\n### 功能扩展\r\n- **历史数据**: 支持历史数据分析\r\n- **策略回测**: 集成回测功能\r\n- **通知系统**: 邮件/短信通知\r\n\r\n## 测试设计\r\n\r\n### 单元测试\r\n- **数据模块**: 数据获取和格式化测试\r\n- **代理模块**: 每个代理的独立测试\r\n- **Dashboard模块**: Web界面功能测试\r\n\r\n### 集成测试\r\n- **端到端测试**: 完整工作流测试\r\n- **API集成测试**: Cursor API调用测试\r\n- **性能测试**: 并发和负载测试\r\n\r\n### 测试数据\r\n- **模拟数据**: 使用模拟股票数据\r\n- **真实数据**: 使用真实API数据\r\n- **边界测试**: 异常情况测试\r\n\r\n## 维护设计\r\n\r\n### 日志管理\r\n- **日志级别**: DEBUG, INFO, WARNING, ERROR\r\n- **日志格式**: 结构化日志格式\r\n- **日志轮转**: 按大小和时间轮转\r\n\r\n### 监控告警\r\n- **健康检查**: 定期检查系统状态\r\n- **性能监控**: 关键指标监控\r\n- **异常告警**: 错误和异常告警\r\n\r\n### 更新策略\r\n- **热更新**: 配置文件热更新\r\n- **版本管理**: 代码版本控制\r\n- **回滚机制**: 快速回滚到稳定版本\r\n",
  "fileStats": {
    "size": 6932,
    "lines": 202,
    "lastModified": "2025-09-28T07:28:43.099Z"
  },
  "comments": []
}