{
  "id": "snapshot_1759044644757_b7hur6gug",
  "approvalId": "approval_1759044644748_m0mh4fh7y",
  "approvalTitle": "港股AI代理系统任务文档",
  "version": 1,
  "timestamp": "2025-09-28T07:30:44.757Z",
  "trigger": "initial",
  "status": "pending",
  "content": "# 港股AI代理系统任务文档\r\n\r\n## 任务概览\r\n\r\n基于 `hk_complete_system.py` 重构整个项目，实现从股票数据获取到7个真实AI代理分析再到Dashboard输出的完整工作流。\r\n\r\n## 任务列表\r\n\r\n### 1. 项目清理和重构\r\n**状态**: [ ] 待开始  \r\n**优先级**: 高  \r\n**预估时间**: 2小时\r\n\r\n**任务描述**: 清理项目中的重复文件，重构代码结构，建立清晰的项目架构。\r\n\r\n**具体步骤**:\r\n- 删除重复的dashboard文件\r\n- 删除重复的启动文件\r\n- 删除测试和调试文件\r\n- 删除重复的文档文件\r\n- 整理src目录结构\r\n- 更新README.md\r\n\r\n**文件路径**:\r\n- 根目录重复文件\r\n- src/目录结构\r\n- docs/目录整理\r\n\r\n**验收标准**:\r\n- 项目结构清晰\r\n- 无重复文件\r\n- 文档完整\r\n\r\n**_Prompt**: Implement the task for spec hk-ai-agents-system, first run spec-workflow-guide to get the workflow guide then implement the task:\r\n- Role: Senior Python Developer and Project Architect\r\n- Task: Clean up the project structure by removing duplicate files and reorganizing the codebase\r\n- Restrictions: Do not delete core functionality files, keep all essential source code\r\n- _Leverage: Use existing file structure analysis, cleanup scripts\r\n- _Requirements: Requirements 1-4 (project overview, user stories, functional requirements, non-functional requirements)\r\n- Success: Clean project structure with no duplicate files, organized directories, updated documentation\r\n\r\n### 2. 数据获取模块实现\r\n**状态**: [ ] 待开始  \r\n**优先级**: 高  \r\n**预估时间**: 3小时\r\n\r\n**任务描述**: 实现股票数据获取和格式化模块，支持从API获取数据并转换为标准格式。\r\n\r\n**具体步骤**:\r\n- 创建 `src/data/stock_data.py` - 股票数据获取\r\n- 创建 `src/data/data_formatter.py` - 数据格式化\r\n- 实现API调用逻辑\r\n- 实现数据验证和清洗\r\n- 添加错误处理和重试机制\r\n- 编写单元测试\r\n\r\n**文件路径**:\r\n- src/data/stock_data.py\r\n- src/data/data_formatter.py\r\n- tests/test_data.py\r\n\r\n**验收标准**:\r\n- 能够成功获取股票数据\r\n- 数据格式标准化\r\n- 错误处理完善\r\n- 单元测试通过\r\n\r\n**_Prompt**: Implement the task for spec hk-ai-agents-system, first run spec-workflow-guide to get the workflow guide then implement the task:\r\n- Role: Data Engineer and API Integration Specialist\r\n- Task: Implement stock data acquisition and formatting module\r\n- Restrictions: Use existing API endpoints, maintain data integrity, handle errors gracefully\r\n- _Leverage: Use existing hk_complete_system.py data fetching logic\r\n- _Requirements: Requirements 1 (stock data acquisition), Design 1 (data module)\r\n- Success: Working data module that can fetch and format stock data from API\r\n\r\n### 3. AI代理模块实现\r\n**状态**: [ ] 待开始  \r\n**优先级**: 高  \r\n**预估时间**: 4小时\r\n\r\n**任务描述**: 实现7个专业AI代理，集成Cursor API，实现并行分析和结果聚合。\r\n\r\n**具体步骤**:\r\n- 创建 `src/agents/base_agent.py` - 代理基类\r\n- 实现7个专业代理类\r\n- 集成Cursor API调用\r\n- 实现并行处理逻辑\r\n- 实现结果聚合\r\n- 添加状态管理\r\n- 编写单元测试\r\n\r\n**文件路径**:\r\n- src/agents/base_agent.py\r\n- src/agents/fundamental.py\r\n- src/agents/technical.py\r\n- src/agents/sentiment.py\r\n- src/agents/news.py\r\n- src/agents/research.py\r\n- src/agents/trader.py\r\n- src/agents/risk_manager.py\r\n- tests/test_agents.py\r\n\r\n**验收标准**:\r\n- 7个代理能够正常启动\r\n- Cursor API集成成功\r\n- 并行处理正常工作\r\n- 结果聚合正确\r\n- 单元测试通过\r\n\r\n**_Prompt**: Implement the task for spec hk-ai-agents-system, first run spec-workflow-guide to get the workflow guide then implement the task:\r\n- Role: AI/ML Engineer and API Integration Specialist\r\n- Task: Implement 7 specialized AI agents with Cursor API integration\r\n- Restrictions: Use existing prompt templates, maintain API rate limits, handle errors gracefully\r\n- _Leverage: Use existing hk_prompt_templates.py and hk_complete_system.py agent logic\r\n- _Requirements: Requirements 2 (AI agent analysis), Design 2 (agents module)\r\n- Success: Working AI agents module with 7 specialized agents using Cursor API\r\n\r\n### 4. Dashboard模块实现\r\n**状态**: [ ] 待开始  \r\n**优先级**: 中  \r\n**预估时间**: 3小时\r\n\r\n**任务描述**: 实现Web Dashboard，实时展示AI代理分析结果，提供美观的用户界面。\r\n\r\n**具体步骤**:\r\n- 创建 `src/dashboard/web_server.py` - Web服务器\r\n- 创建 `src/dashboard/html_generator.py` - HTML生成\r\n- 实现实时数据更新\r\n- 实现响应式设计\r\n- 添加静态资源\r\n- 实现自动刷新\r\n- 编写单元测试\r\n\r\n**文件路径**:\r\n- src/dashboard/web_server.py\r\n- src/dashboard/html_generator.py\r\n- src/dashboard/static/\r\n- tests/test_dashboard.py\r\n\r\n**验收标准**:\r\n- Web服务器正常启动\r\n- 界面美观响应式\r\n- 实时数据更新\r\n- 自动刷新功能\r\n- 单元测试通过\r\n\r\n**_Prompt**: Implement the task for spec hk-ai-agents-system, first run spec-workflow-guide to get the workflow guide then implement the task:\r\n- Role: Frontend Developer and Web Application Specialist\r\n- Task: Implement Web Dashboard for displaying AI agent analysis results\r\n- Restrictions: Use modern web standards, ensure responsive design, handle real-time updates\r\n- _Leverage: Use existing hk_agents_dashboard.py as reference\r\n- _Requirements: Requirements 3 (Dashboard display), Design 3 (Dashboard module)\r\n- Success: Working Web Dashboard with real-time updates and responsive design\r\n\r\n### 5. 系统集成和测试\r\n**状态**: [ ] 待开始  \r\n**优先级**: 高  \r\n**预估时间**: 2小时\r\n\r\n**任务描述**: 集成所有模块，实现完整的端到端工作流，进行系统测试。\r\n\r\n**具体步骤**:\r\n- 创建 `main.py` - 主入口文件\r\n- 集成数据获取模块\r\n- 集成AI代理模块\r\n- 集成Dashboard模块\r\n- 实现配置管理\r\n- 添加日志系统\r\n- 进行端到端测试\r\n\r\n**文件路径**:\r\n- main.py\r\n- config/settings.py\r\n- src/utils/logger.py\r\n- tests/test_integration.py\r\n\r\n**验收标准**:\r\n- 系统能够完整运行\r\n- 所有模块正常集成\r\n- 端到端测试通过\r\n- 性能满足要求\r\n\r\n**_Prompt**: Implement the task for spec hk-ai-agents-system, first run spec-workflow-guide to get the workflow guide then implement the task:\r\n- Role: DevOps Engineer and System Integration Specialist\r\n- Task: Integrate all modules and implement end-to-end system testing\r\n- Restrictions: Ensure all modules work together, maintain system stability, handle errors gracefully\r\n- _Leverage: Use existing hk_complete_system.py as reference for integration\r\n- _Requirements: Requirements 4 (system integration), Design (overall architecture)\r\n- Success: Complete working system with all modules integrated and tested\r\n\r\n### 6. 文档和部署\r\n**状态**: [ ] 待开始  \r\n**优先级**: 中  \r\n**预估时间**: 1小时\r\n\r\n**任务描述**: 完善项目文档，创建部署脚本，确保系统易于使用和维护。\r\n\r\n**具体步骤**:\r\n- 更新README.md\r\n- 创建API文档\r\n- 创建用户指南\r\n- 创建部署脚本\r\n- 更新requirements.txt\r\n- 创建Docker配置（可选）\r\n\r\n**文件路径**:\r\n- README.md\r\n- docs/api_reference.md\r\n- docs/user_guide.md\r\n- deploy.py\r\n- requirements.txt\r\n\r\n**验收标准**:\r\n- 文档完整清晰\r\n- 部署脚本可用\r\n- 用户能够快速上手\r\n- 维护文档齐全\r\n\r\n**_Prompt**: Implement the task for spec hk-ai-agents-system, first run spec-workflow-guide to get the workflow guide then implement the task:\r\n- Role: Technical Writer and DevOps Engineer\r\n- Task: Create comprehensive documentation and deployment scripts\r\n- Restrictions: Ensure documentation is clear and accurate, deployment scripts are reliable\r\n- _Leverage: Use existing documentation and project structure\r\n- _Requirements: All requirements (documentation and deployment)\r\n- Success: Complete documentation and working deployment scripts\r\n\r\n## 任务依赖关系\r\n\r\n```\r\n任务1 (项目清理) → 任务2 (数据模块) → 任务5 (系统集成)\r\n任务1 (项目清理) → 任务3 (代理模块) → 任务5 (系统集成)\r\n任务1 (项目清理) → 任务4 (Dashboard) → 任务5 (系统集成)\r\n任务5 (系统集成) → 任务6 (文档部署)\r\n```\r\n\r\n## 里程碑\r\n\r\n- **里程碑1**: 项目清理完成 (任务1)\r\n- **里程碑2**: 核心模块完成 (任务2, 3, 4)\r\n- **里程碑3**: 系统集成完成 (任务5)\r\n- **里程碑4**: 项目交付完成 (任务6)\r\n\r\n## 风险控制\r\n\r\n### 技术风险\r\n- **API限制**: Cursor API调用频率限制\r\n- **数据质量**: 股票数据API稳定性\r\n- **性能问题**: 并发处理性能\r\n\r\n### 缓解措施\r\n- 实现重试机制和降级策略\r\n- 添加数据验证和错误处理\r\n- 进行性能测试和优化\r\n\r\n## 质量保证\r\n\r\n### 代码质量\r\n- 遵循Python编码规范\r\n- 添加类型注解\r\n- 编写单元测试\r\n- 代码审查\r\n\r\n### 测试策略\r\n- 单元测试覆盖率 > 80%\r\n- 集成测试覆盖主要流程\r\n- 性能测试验证响应时间\r\n- 用户验收测试\r\n\r\n## 交付物\r\n\r\n1. **源代码**: 完整的重构后代码\r\n2. **文档**: README, API文档, 用户指南\r\n3. **测试**: 单元测试, 集成测试\r\n4. **部署**: 部署脚本和配置\r\n5. **演示**: 完整的工作流演示\r\n",
  "fileStats": {
    "size": 9319,
    "lines": 276,
    "lastModified": "2025-09-28T07:30:39.818Z"
  },
  "comments": []
}